'use strict';

document.addEventListener('DOMContentLoaded', () => {

    const form = document.getElementById('my-form');
    const sendButton = document.getElementById('test');
    const url = 'https://formspree.io/f/xpzeogqv';

    sendButton.addEventListener('click', (e) => {
    e.preventDefault();
    fetch(url, {
        method: 'POST',
        headers: {
        'Content-Type': 'application/json'
        },
        body: JSON.stringify({
        name: form.name.value,
        _replyto: form.email.value,
        email: form.email.value
        })
    })
    .then(response => {
        if (response.ok) {
        alert('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.');
        form.reset();
        } else {
        throw new Error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
        }
    })
    .catch(error => {
        alert(error.message);
    });
    });

    // –ù–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã
    const question = document.querySelector('.question');
    const questions = [
        '–î–ª—è –∫–æ–≥–æ –≤—ã –∏—â–µ—Ç–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ?',
        '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–∞—Ç—å?',
        '–ö–∞–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É–∂–µ –µ—Å—Ç—å?',
        '–ö—É–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–∞—Ç—å?',
        '–ö–∞–∫—É—é —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?',
        '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –ø–ª–∞—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?',
        '–ö–∞–∫–∞—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
        '–ö–∞–∫ —Å–∫–æ—Ä–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–∞—Ç—å?',
        '–í–∞—à–∞ –ø–æ–¥–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞! ü•≥ –ö—É–¥–∞ –Ω–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—ë?'
    ];

    // –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    let stepCount = 1;

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –≤—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∏
    function checkForm() {
        const submitBtn = document.querySelector('.more');
        const currentBlock = document.querySelector(`.wrapper-block__step-${stepCount}`);
        const currentCards = currentBlock.querySelectorAll('.card');
        let checked = true;

        for(let i = 0; i < currentCards.length; i++){
            if(currentCards[i].classList.contains('card__active')){
                submitBtn.disabled = !checked;
                submitBtn.classList.remove('disabled');
                break;
            } else {
                submitBtn.classList.add('disabled');
                submitBtn.disabled = checked; 
            }
        }

        // –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–∞—Ä—Ç–æ—á–µ–∫ —Å radio-–∫–Ω–æ–ø–∫–æ–π
        currentCards.forEach(item => {
            if(item && item.querySelectorAll('.radio-button').length > 0){
                
                item.addEventListener('click', () => {
                    const input = item.querySelector('input');
                    const span = item.querySelector('span');
        
                    currentCards.forEach(btn => {
                        btn.classList.remove('card__active');
                        btn.querySelector('span').classList.remove('radio-button__active');
                    });
        
                    span.classList.add('radio-button__active');
                    item.classList.add('card__active');
        
                    input.checked = true;
                    checkForm(); 
                    
                });
            }    
        });


    }

    checkForm();
    
    

    // –õ–æ–≥–∏–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
    const card–°heckbox = document.querySelectorAll('.card-checkbox');

    card–°heckbox.forEach(elem => {
        elem.addEventListener('click', () => {
            const dropMenu = elem.nextElementSibling;

            if(dropMenu.classList.contains('drop-menu')){
                if(dropMenu.classList.contains('display-none')){
                    dropMenu.classList.remove('display-none');
                } else {
                    dropMenu.classList.add('display-none');
                }
            }  
        });
    });
    

    // –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞
    const cityItems = document.querySelectorAll('.drop-menu__item');

    cityItems.forEach(item => {
        if(item && item.querySelectorAll('.checked-button').length > 0){
            item.addEventListener('click', () => {
                const input = item.querySelector('input');
                const span = item.querySelector('span');
                const text = item.querySelector('label');
                const cardText = document.querySelectorAll('.card-checkbox__text')

                let mainText = text.innerHTML;
    
                cityItems.forEach(btn => {
                    btn.querySelector('span').classList.remove('checked-button__active');
                    
                });
                span.classList.add('checked-button__active');
                
                input.checked = true;
                
                cardText.forEach(elem => {
                    elem.innerHTML = mainText;
                });
            });
        }      
    });














    // –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ 
    const button = document.querySelectorAll('button');
    
    button.forEach(btn => {
        btn.addEventListener('click', () => {
            const buttonMore = document.querySelector('button.more');
            const buttonBack = document.querySelector('button.back');
            const buttonSend = document.querySelector('.wrapper-block__send');
            const wrapperBlock = document.querySelector('.wrapper-block__content');
            const step = document.querySelector('.step');
            
            // –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ "–î–∞–ª–µ–µ", —Ç–æ —Å—á–µ—Ç—á–∏–∫ —à–∞–≥–æ–≤ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ù–∞–∑–∞–¥", —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 1
            if(stepCount < questions.length && stepCount > 0){
                if(btn.classList.contains('more')){
                    stepCount++;
                } else if(btn.classList.contains('back')) {
                    stepCount--;
                } else {
                    return;
                }
            }    

            

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫ —à–∞–≥–∞
            for(let key of wrapperBlock.children){
                const wrapperContent = key;
                if((key.classList[1] == `wrapper-block__step-${stepCount}`)){
                    wrapperContent.classList.remove('display-none');
                } else {
                    wrapperContent.classList.add('display-none');
                }             
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –µ—Å–ª–∏ —à–∞–≥ –±–æ–ª—å—à–µ 1, –∏ —É–±–∏—Ä–∞–µ–º, –µ—Å–ª–∏ —à–∞–≥ –º–µ–Ω—å—à–µ
            (stepCount > 1 && stepCount < 9) ? buttonBack.classList.remove('opacity') : buttonBack.classList.add('opacity');

            if(stepCount == 9){
                buttonMore.classList.add('display-none');
                buttonBack.classList.add('display-none');
                buttonSend.classList.remove('display-none');
            } else {
                buttonMore.classList.remove('display-none');
                buttonBack.classList.remove('display-none');
                buttonSend.classList.add('display-none');
            }


            
            
            // –ú–µ–Ω—è–µ–º —Ü–∏—Ñ—Ä—É –≤ —à–∞–≥–µ
            step.innerHTML = `–®–∞–≥ ${stepCount}/9`; 

            question.innerHTML = questions[stepCount-1];


            checkForm(); 
        });
    });
    

    
    // console.log(currentBlock);
    // console.log(currentCards);











});