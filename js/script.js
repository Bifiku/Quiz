'use strict';

document.addEventListener('DOMContentLoaded', () => {
    // –ù–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã
    const question = document.querySelector('.question');
    const questions = [
        '–î–ª—è –∫–æ–≥–æ –≤—ã –∏—â–µ—Ç–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ?',
        '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–∞—Ç—å?',
        '–ö–∞–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É–∂–µ –µ—Å—Ç—å?',
        '–ö—É–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–∞—Ç—å?',
        '–ö–∞–∫—É—é —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?',
        '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –ø–ª–∞—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?',
        '–ö–∞–∫–∞—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
        '–ö–∞–∫ —Å–∫–æ—Ä–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–∞—Ç—å?',
        '–í–∞—à–∞ –ø–æ–¥–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞! ü•≥ –ö—É–¥–∞ –Ω–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—ë?'
    ];

    // –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    let stepCount = 1;

    function checkForm(selectorBtn, selectorCards) {
        const submitBtn = document.querySelector(selectorBtn);
        const cards = document.querySelectorAll(`input[name="step-${stepCount}"]`);
        let checked = false;
        for (let i = 0; i < cards.length; i++) {
          if (cards[i].checked) {
            console.log(cards[i].checked);
            checked = true;
            break;
          }
        }
        // console.log(submitBtn.disabled);
        submitBtn.disabled = checked;
        
        console.log(submitBtn.disabled);
    }

    // –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–∞—Ä—Ç–æ—á–µ–∫ —Å radio-–∫–Ω–æ–ø–∫–æ–π
    const cards = document.querySelectorAll('.card');

    cards.forEach(item => {
        if(item && item.querySelectorAll('.radio-button').length > 0){
            
            item.addEventListener('click', () => {
                const input = item.querySelector('input');
                const span = item.querySelector('span');
    
                cards.forEach(btn => {
                    btn.classList.remove('card__active');
                    btn.querySelector('span').classList.remove('radio-button__active');
                });
    
                span.classList.add('radio-button__active');
                item.classList.add('card__active');
    
                input.checked = true;
                checkForm('.more', 'input[name="card"]');
                
            });
        }    
    });
    
    

    // –õ–æ–≥–∏–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
    const card–°heckbox = document.querySelectorAll('.card-checkbox');

    card–°heckbox.forEach(elem => {
        elem.addEventListener('click', () => {
            const dropMenu = elem.nextElementSibling;

            if(dropMenu.classList.contains('drop-menu')){
                if(dropMenu.classList.contains('display-none')){
                    console.log('ready');
                    dropMenu.classList.remove('display-none');
                } else {
                    dropMenu.classList.add('display-none');
                }
            }  
        });
    });
    

    // –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞
    const cityItems = document.querySelectorAll('.drop-menu__item');

    cityItems.forEach(item => {
        if(item && item.querySelectorAll('.checked-button').length > 0){
            item.addEventListener('click', () => {
                const input = item.querySelector('input');
                const span = item.querySelector('span');
                const text = item.querySelector('label');
                const cardText = document.querySelectorAll('.card-checkbox__text')

                let mainText = text.innerHTML;
    
                cityItems.forEach(btn => {
                    btn.querySelector('span').classList.remove('checked-button__active');
                    
                });
                span.classList.add('checked-button__active');
                
                input.checked = true;
                
                cardText.forEach(elem => {
                    elem.innerHTML = mainText;
                });
            });
        }      
    });














    // –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ 
    const button = document.querySelectorAll('button');
    
    button.forEach(btn => {
        btn.addEventListener('click', () => {
            const buttonMore = document.querySelector('button.more');
            const buttonBack = document.querySelector('button.back');
            const wrapperBlock = document.querySelector('.wrapper-block__content');
            const step = document.querySelector('.step');
            
            checkForm('.more', 'input[name="card"]');
            // –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ "–î–∞–ª–µ–µ", —Ç–æ —Å—á–µ—Ç—á–∏–∫ —à–∞–≥–æ–≤ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ù–∞–∑–∞–¥", —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 1
            if(stepCount < questions.length && stepCount > 0){
                if(btn.classList.contains('more')){
                    stepCount++;
                } else {
                    stepCount--;
                } 
            }           

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫ —à–∞–≥–∞
            for(let key of wrapperBlock.children){
                const wrapperContent = key;
                if((key.classList[1] == `wrapper-block__step-${stepCount}`)){
                    wrapperContent.classList.remove('display-none');
                } else {
                    wrapperContent.classList.add('display-none');
                }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –µ—Å–ª–∏ —à–∞–≥ –±–æ–ª—å—à–µ 1, –∏ —É–±–∏—Ä–∞–µ–º, –µ—Å–ª–∏ —à–∞–≥ –º–µ–Ω—å—à–µ
            (stepCount > 1 && stepCount < 9) ? buttonBack.classList.remove('opacity') : buttonBack.classList.add('opacity');

            
            
            // –ú–µ–Ω—è–µ–º —Ü–∏—Ñ—Ä—É –≤ —à–∞–≥–µ
            step.innerHTML = `–®–∞–≥ ${stepCount}/9`; 

            question.innerHTML = questions[stepCount-1];


    
        });
    });
    

    
    // console.log(currentBlock);
    // console.log(currentCards);











});